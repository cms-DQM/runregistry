kind: Deployment
apiVersion: apps/v1
metadata:
  name: runregistry-backend
  # TODO: Update namespace
  namespace: dev-cmsrunregistry
  labels:
    app: runregistry-backend
    app.kubernetes.io/component: runregistry-backend
    app.kubernetes.io/instance: runregistry-backend
    app.kubernetes.io/name: runregistry-backend
    app.kubernetes.io/part-of: runregistry
    # TODO: Update namespace
    app.openshift.io/runtime-namespace: dev-cmsrunregistry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: runregistry-backend
  template:
    metadata:
      labels:
        app: runregistry-backend
        deployment: runregistry-backend
    spec:
      volumes:
        - name: secret-volume
          secret:
            secretName: grid-cert-secret
      containers:
        - name: runregistry-backend
          resources:
            requests:
              memory: 512Mi
            limits:
              memory: 2Gi
          command:
            - npm
            - run
            - kubernetes
          envFrom:
            - secretRef:
                name: runregistry-backend-secret
          env:
            # Map automatically-generated redis pass to
            # an env variable
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: redis
                  key: database-password
          imagePullPolicy: Always
          volumeMounts:
            - name: secret-volume
              readOnly: true
              mountPath: "/usr/src/app/certs/"
          # TODO: Update namespace
          image: >-
            image-registry.openshift-image-registry.svc:5000/dev-cmsrunregistry/runregistry-backend:latest
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
